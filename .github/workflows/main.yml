name: Workflow for Push on Main Branch

on:
  push:
    branches:
    - main

jobs:
  pytest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependecies
      run: |
        python -m pip install --upgrade pip
        pip install poetry pytest
        poetry config virtualenvs.create false --local
        poetry config virtualenvs.in-project false --local
        poetry install

    - name: Run tests
      run: |
        poetry run pytest

  pytype:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependecies
      run: |
        python -m pip install --upgrade pip
        pip install poetry pytype
        poetry config virtualenvs.create false --local
        poetry config virtualenvs.in-project false --local
        poetry install

    - name: Run type checking
      run: |
        poetry run pytype

  pylint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependecies
      run: |
        python -m pip install --upgrade pip
        pip install poetry pylint
        poetry config virtualenvs.create false --local
        poetry config virtualenvs.in-project false --local
        poetry install

    - name: Run linting
      run: |
        poetry run pylint rustlike tests

  build:
    needs: [pytest, pytype, pylint]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependecies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false --local
        poetry config virtualenvs.in-project false --local
        poetry install

    - name: Build package
      run: |
        poetry build

    - name: Upload package
      uses: actions/upload-artifact@v2
      with:
        name: wheel
        path: dist/*.whl
